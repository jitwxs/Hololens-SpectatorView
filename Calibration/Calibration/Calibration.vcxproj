<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\directxtk_desktop_2015.2017.6.21.1\build\native\directxtk_desktop_2015.props" Condition="Exists('..\packages\directxtk_desktop_2015.2017.6.21.1\build\native\directxtk_desktop_2015.props')" />
  <Import Project="packages\directxtk_desktop_2015.2016.2.23.1\build\native\directxtk_desktop_2015.props" Condition="Exists('packages\directxtk_desktop_2015.2016.2.23.1\build\native\directxtk_desktop_2015.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <RootNamespace>Calibration</RootNamespace>
    <ProjectGuid>{70239410-43ff-4f2b-acbb-e640437f7289}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WindowsAppContainer>false</WindowsAppContainer>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <WindowsAppContainer>false</WindowsAppContainer>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
    <Import Project="..\..\Compositor\SharedHeaders\SharedHeaders.vcxitems" Label="Shared" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\..\dependencies.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\..\dependencies.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <IncludePath>$(KINECTSDK20_DIR)\inc;$(ProjectDir)\..\..\Compositor\CompositorDLL;$(ProjectDir)\;$(VC_IncludePath);$(WindowsSDK_IncludePath);$(OpenCV_vc14)\..\..\include</IncludePath>
    <LibraryPath>$(KINECTSDK20_DIR)\lib\x64;$(LibraryPath);$(OpenCV_vc14)\bin;$(OpenCV_vc14)\lib</LibraryPath>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(KINECTSDK20_DIR)\inc;$(ProjectDir)\..\..\Compositor\CompositorDLL;$(ProjectDir)\;$(VC_IncludePath);$(WindowsSDK_IncludePath);$(OpenCV_vc14)\..\..\include</IncludePath>
    <LibraryPath>$(KINECTSDK20_DIR)\lib\x64;$(LibraryPath);$(OpenCV_vc14)\bin;$(OpenCV_vc14)\lib</LibraryPath>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
      <FloatingPointModel>Fast</FloatingPointModel>
      <AdditionalIncludeDirectories>..\..\Compositor\CompositorDLL\;..\..\Compositor\SharedHeaders\;$(OpenCV_DIR)\..\..\include</AdditionalIncludeDirectories>
      <AdditionalUsingDirectories>
      </AdditionalUsingDirectories>
      <CompileAsWinRT>false</CompileAsWinRT>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
    <Link>
      <SubSystem>NotSet</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>d3d11.lib;dxgi.lib;dxguid.lib;uuid.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;odbc32.lib;odbccp32.lib;</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(ProjectDir)\</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>xcopy /y "$(OpenCV_vc14)\bin\*.dll" "$(OutDir)"</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if EXIST "$(decklink_inc)" xcopy /y "$(decklink_inc)"
xcopy /y "$(OpenCV_vc14)\bin\*.dll"
if EXIST "$(Elgato_Filter)" xcopy /y "$(Elgato_Filter)" ..\..\Compositor\CompositorDLL\</Command>
    </PreBuildEvent>
    <PreLinkEvent>
      <Command>
      </Command>
    </PreLinkEvent>
    <ProjectReference>
      <UseLibraryDependencyInputs>true</UseLibraryDependencyInputs>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
      <FloatingPointModel>Fast</FloatingPointModel>
      <AdditionalIncludeDirectories>..\..\Compositor\CompositorDLL\;..\..\Compositor\SharedHeaders\;$(OpenCV_DIR)\..\..\include</AdditionalIncludeDirectories>
      <AdditionalUsingDirectories>
      </AdditionalUsingDirectories>
      <CompileAsWinRT>false</CompileAsWinRT>
    </ClCompile>
    <Link>
      <SubSystem>NotSet</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>d3d11.lib;dxgi.lib;dxguid.lib;uuid.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;odbc32.lib;odbccp32.lib;</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(ProjectDir)\</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>xcopy /y "$(OpenCV_vc14)\bin\*.dll" "$(OutDir)"</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if EXIST "$(decklink_inc)" xcopy /y "$(decklink_inc)"
xcopy /y "$(OpenCV_vc14)\bin\*.dll"
if EXIST "$(Elgato_Filter)" xcopy /y "$(Elgato_Filter)" ..\..\Compositor\CompositorDLL\</Command>
    </PreBuildEvent>
    <PreLinkEvent>
      <Command>
      </Command>
    </PreLinkEvent>
    <ProjectReference>
      <UseLibraryDependencyInputs>true</UseLibraryDependencyInputs>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="..\..\Compositor\CompositorDLL\DeckLinkDevice.h" />
    <ClInclude Include="..\..\Compositor\CompositorDLL\DeckLinkManager.h" />
    <ClInclude Include="..\..\Compositor\CompositorDLL\ElgatoFrameProvider.h" />
    <ClInclude Include="..\..\Compositor\CompositorDLL\ElgatoSampleCallback.h" />
    <ClInclude Include="..\..\Compositor\CompositorDLL\IFrameProvider.h" />
    <ClInclude Include="..\..\Compositor\CompositorDLL\OpenCVFrameProvider.h" />
    <ClInclude Include="CalibrationApp.h" />
    <ClInclude Include="DeviceResources.h" />
    <ClInclude Include="ReadData.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="StepTimer.h" />
  </ItemGroup>
  <ItemGroup Condition="Exists('$(Elgato_Filter)')">
    <ClInclude Include="..\..\Compositor\CompositorDLL\IVideoCaptureFilter.h" />
    <ClInclude Include="..\..\Compositor\CompositorDLL\IVideoCaptureFilterTypes.h" />
    <ClInclude Include="..\..\Compositor\CompositorDLL\qedit.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\Compositor\CompositorDLL\DeckLinkDevice.cpp">
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">stdafx.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|x64'">stdafx.h</PrecompiledHeaderFile>
    </ClCompile>
    <ClCompile Include="..\..\Compositor\CompositorDLL\DeckLinkManager.cpp">
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">stdafx.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|x64'">stdafx.h</PrecompiledHeaderFile>
    </ClCompile>
    <ClCompile Include="..\..\Compositor\CompositorDLL\ElgatoFrameProvider.cpp" />
    <ClCompile Include="..\..\Compositor\CompositorDLL\ElgatoSampleCallback.cpp" />
    <ClCompile Include="..\..\Compositor\CompositorDLL\OpenCVFrameProvider.cpp">
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">stdafx.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|x64'">stdafx.h</PrecompiledHeaderFile>
    </ClCompile>
    <ClCompile Include="CalibrationApp.cpp" />
    <ClCompile Include="DeviceResources.cpp" />
    <ClCompile Include="Main.cpp" />
    <ClCompile Include="stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">stdafx.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|x64'">stdafx.h</PrecompiledHeaderFile>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="resource.rc" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="directx.ico" />
  </ItemGroup>
  <ItemGroup>
    <Manifest Include="settings.manifest" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
    <None Include="segoeUI32.spritefont" />
  </ItemGroup>
  <ItemGroup Condition="Exists('$(DeckLink_inc)')">
    <Midl Include="DeckLinkAPI.idl" />
    <ClCompile Include="DeckLinkAPI_i.c">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClInclude Include="DeckLinkAPI_h.h" />
  </ItemGroup>
  <ItemGroup>
    <FxCompile Include="ForceOpaque.hlsl">
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Pixel</ShaderType>
      <ShaderModel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">5.0</ShaderModel>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Pixel</ShaderType>
      <ShaderModel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">5.0</ShaderModel>
    </FxCompile>
    <FxCompile Include="YUV2RGB.hlsl">
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Pixel</ShaderType>
      <ShaderModel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">5.0</ShaderModel>
      <ShaderModel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">5.0</ShaderModel>
    </FxCompile>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="packages\directxtk_desktop_2015.2016.2.23.1\build\native\directxtk_desktop_2015.targets" Condition="Exists('packages\directxtk_desktop_2015.2016.2.23.1\build\native\directxtk_desktop_2015.targets')" />
    <Import Project="packages\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.2.8.0\build\native\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.targets" Condition="Exists('packages\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.2.8.0\build\native\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.targets')" />
    <Import Project="..\packages\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.2.9.1\build\native\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.targets" Condition="Exists('..\packages\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.2.9.1\build\native\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.targets')" />
    <Import Project="..\packages\directxtk_desktop_2015.2017.6.21.1\build\native\directxtk_desktop_2015.targets" Condition="Exists('..\packages\directxtk_desktop_2015.2017.6.21.1\build\native\directxtk_desktop_2015.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.2.9.1\build\native\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.2.9.1\build\native\cpprestsdk.v140.windesktop.msvcstl.dyn.rt-dyn.targets'))" />
    <Error Condition="!Exists('..\packages\directxtk_desktop_2015.2017.6.21.1\build\native\directxtk_desktop_2015.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\directxtk_desktop_2015.2017.6.21.1\build\native\directxtk_desktop_2015.props'))" />
    <Error Condition="!Exists('..\packages\directxtk_desktop_2015.2017.6.21.1\build\native\directxtk_desktop_2015.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\directxtk_desktop_2015.2017.6.21.1\build\native\directxtk_desktop_2015.targets'))" />
  </Target>
</Project>